///////////////////////////////////////////////////////////////////////////////
//
// Filesystem change stream
//
///////////////////////////////////////////////////////////////////////////////

//// IMPORTS //////////////////////////////////////////////////////////////////

let { libraryPath } = require('../../config.json');
let { compose } = require('ramda');

let bacon = require('baconjs');
let chokidar = require('chokidar');
let { toPair } = require('../lib/helpers');

///////////////////////////////////////////////////////////////////////////////

let watcher = chokidar.watch(libraryPath, {
  usePolling : true
});

//  :: Function sink -> Function binder
let fsChangeBinder = sink => watcher.on('all', compose(sink, toPair));

//  :: EventStream [event, path]
let fsChangeStream = bacon.fromBinder(fsChangeBinder);

//// EXPORTS //////////////////////////////////////////////////////////////////

export default fsChangeStream;

///////////////////////////////////////////////////////////////////////////////
